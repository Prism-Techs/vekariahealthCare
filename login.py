# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\login.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from datetime import datetime
import os,subprocess


def resource_path(relative_path):
    """
    Get absolute path to resource, works for dev and for PyInstaller.
    
    Args:
        relative_path (str): The relative path to the resource file
        
    Returns:
        str: The absolute path to the resource
    """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        # If not running as bundled exe, use the script's directory
        base_path = os.path.abspath(os.path.dirname(__file__))
    
    return os.path.join(base_path, relative_path)


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
                # Set frameless window
        Form.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        Form.setObjectName("Form")
        Form.resize(1024, 600)
        Form.setStyleSheet("background-color:black;")
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(0, 0, 1024, 40))
        self.frame.setStyleSheet("background-color:#1f2836;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(60, 0, 281, 41))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:white;")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(930, 0, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color:white;")
        self.label_3.setObjectName("label_3")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(5, 8, 44, 23))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/newPrefix/Vekaria Healthcare Logo/VHC Logo.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.frame)
        self.label_10.setGeometry(QtCore.QRect(870, 4, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap(resource_path("icons/logo12.png")))
        self.label_10.setScaledContents(True)
        self.label_10.setObjectName("label_10")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(0, 50, 1024, 40))
        font = QtGui.QFont()
        font.setFamily("Helvetica Rounded")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_4.setStyleSheet("QFrame{\n"
"background:none;\n"
"color:#f2f5f3;\n"
"}")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(200, 115, 624, 430))
        self.frame_2.setStyleSheet("QFrame{\n"
"background-color:#1f2836;\n"
"border-radius:30px;\n"
"border:1px solid white;\n"
"\n"
"};\n"
"color:white;")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        # Modify username field
        self.username = QtWidgets.QLineEdit(self.frame_2)
        self.username.setGeometry(QtCore.QRect(62, 50, 500, 61))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.username.setFont(font)
        self.username.setStyleSheet("""
            QLineEdit {
                background-color: #334155;
                border:1px solid white;
                border-radius: 15px;
                padding: 5px;
                padding-left: 30px;
                color: #94a3b8;
            }
            QLineEdit:focus {
                border: 2px solid #64B5F6;
                color: white;
            }
        """)
        self.username.setObjectName("username")
        self.username.setPlaceholderText("Username")

        # Modify password field
        self.password = QtWidgets.QLineEdit(self.frame_2)
        self.password.setGeometry(QtCore.QRect(62, 140, 500, 61))
        self.password.setFont(font)
        self.password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password.setStyleSheet("""
            QLineEdit {
                background-color: #334155;
                border: 1px solid white;
                border-radius: 15px;
                padding: 5px;
                padding-left: 30px;
                padding-right: 50px;
                color: #94a3b8;
            }
            QLineEdit:focus {
                border: 2px solid #64B5F6;
                color: white;
            }
        """)
        self.password.setObjectName("password")
        self.password.setPlaceholderText("Password")

        self.login = QtWidgets.QPushButton(self.frame_2)
        self.login.setGeometry(QtCore.QRect(230, 350, 161, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.login.setFont(font)
        self.login.setStyleSheet("\n"
"    QPushButton {\n"
"        background-color: transparent;\n"
"        color: white;\n"
"        border: 1px solid white;\n"
"        padding: 10px 20px;\n"
"        font-size: 24px;\n"
"        border-radius: 1px;\n"
"        font-weight: bold;\n"
"        transition: all 0.3s;\n"
"        margin: 2px;\n"
"        /* Add subtle initial shadow */\n"
"        border-bottom: 1px solid white;\n"
"        border-right: 1px solid white;\n"
"    }\n"
"    \n"
"    QPushButton:hover {\n"
"        background-color: rgba(33, 150, 243, 0.1);\n"
"        border: 2px solid #64B5F6;\n"
"        color: #64B5F6;\n"
"        /* Enhanced hover effect */\n"
"        border-bottom: 4px solid #42A5F5;\n"
"        border-right: 3px solid #42A5F5;\n"
"        margin: 2px;\n"
"    }\n"
"    \n"
"    QPushButton:pressed {\n"
"        background-color: rgba(33, 150, 243, 0.2);\n"
"        border: 2px solid white;\n"
"        /* Create pressed effect */\n"
"        border-bottom: 2px solid white;\n"
"        border-right: 2px solid white;\n"
"        margin-top: 4px;\n"
"        margin-left: 2px;\n"
"        padding-top: 11px;\n"
"        padding-left: 21px;\n"
"    }\n"
"    \n"
"    QPushButton:disabled {\n"
"        background-color: transparent;\n"
"        color: #B0B0B0;\n"
"        border: 2px solid #B0B0B0;\n"
"        border-bottom: 4px solid #909090;\n"
"        border-right: 3px solid #909090;\n"
"    }\n"
"")
        self.login.setObjectName("login")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(112, 210, 400, 71))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_7.setStyleSheet("QFrame{\n"
"backgorund:none;\n"
"border:none;\n"
"color:#f2f5f3;\n"
"}")
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setGeometry(QtCore.QRect(110, 270, 491, 41))
        self.frame_3.setStyleSheet("border:none;")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.radioButton = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton.setGeometry(QtCore.QRect(11, 11, 106, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioButton.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"}")
        self.radioButton.setChecked(False)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton_2.setEnabled(True)
        self.radioButton_2.setGeometry(QtCore.QRect(190, 11, 80, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioButton_2.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"align-item:center;\n"
"align-content:center;\n"
"justify-content:center;\n"
"}")
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton_3.setGeometry(QtCore.QRect(328, 11, 71, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"}")
        self.radioButton_3.setObjectName("radioButton_3")
        self.Time = QtWidgets.QLabel(Form)
        self.Time.setGeometry(QtCore.QRect(960, 550, 55, 16))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        self.Time.setFont(font)
        self.Time.setStyleSheet("color:white;")
        self.Time.setObjectName("Time")
        self.date = QtWidgets.QLabel(Form)
        self.date.setGeometry(QtCore.QRect(934, 570, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        self.date.setFont(font)
        self.date.setStyleSheet("color:white;")
        self.date.setObjectName("date")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_2.setText(_translate("Form", "Vekaria Healthcare"))
        self.label_3.setText(_translate("Form", "V1.0"))
        self.label_4.setText(_translate("Form", "Macular Densitometer"))
        # self.username.setText(_translate("Form", "Username"))
        # self.password.setText(_translate("Form", "Password"))
        self.login.setText(_translate("Form", "LOGIN"))
        self.label_7.setText(_translate("Form", "Operation Mode"))
        self.radioButton.setText(_translate("Form", "Eye Camp"))
        self.radioButton_2.setText(_translate("Form", "Clinic"))
        self.radioButton_3.setText(_translate("Form", "Demo"))
        self.Time.setText(_translate("Form", "19:53"))
        self.date.setText(_translate("Form", "12-10-2024"))
import vekarialogo_rc
import wifi_rc

class LoginForm(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.ui = Ui_Form()
        self.ui.setupUi(self)
        self.keyboard_process = None
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        
        # Setup event filters
        self.ui.username.installEventFilter(self)
        self.ui.password.installEventFilter(self)
        
        # Setup password visibility toggle
        self.setup_password_toggle()
        
        # Setup time updates
        self.setup_time_update()
        
        # Connect first click handlers
        self.ui.username.mousePressEvent = lambda e: self.handle_first_click(self.ui.username, "Username")
        self.ui.password.mousePressEvent = lambda e: self.handle_first_click(self.ui.password, "Password")

    def setup_password_toggle(self):
        self.toggle_button = QtWidgets.QPushButton(self.ui.frame_2)
        self.toggle_button.setGeometry(QtCore.QRect(520, 150, 40, 40))
        self.toggle_button.setStyleSheet("""
            QPushButton {
                background-color: transparent;
                border: none;
                color: #94a3b8;
                font-size: 20px;
            }
            QPushButton:hover {
                color: #64B5F6;
            }
        """)
        self.toggle_button.setText("👁")
        self.toggle_button.clicked.connect(self.toggle_password_visibility)
        self.toggle_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))

    def setup_time_update(self):
        self.timer = QtCore.QTimer(self)
        self.timer.timeout.connect(self.update_time)
        self.timer.start(1000)
        self.update_time()

    def update_time(self):
        current_time = datetime.now()
        self.ui.Time.setText(current_time.strftime("%H:%M"))
        self.ui.date.setText(current_time.strftime("%d-%m-%Y"))

    def show_keyboard(self):
        """Show the Raspberry Pi onboard keyboard"""
        try:
            # Check if onboard is installed
            if not os.path.exists('/usr/bin/onboard'):
                subprocess.run(['sudo', 'apt-get', 'install', '-y', 'onboard'])
            
            # Kill any existing keyboard process
            self.hide_keyboard()
            
            # Start onboard keyboard with specific settings
            self.keyboard_process = subprocess.Popen([
                'onboard',
                '--size=800x250',  # Set keyboard size
                '--x=112',         # X position (centered)
                '--y=300',         # Y position (bottom)
                '--layout=Full Keyboard',  # Use full keyboard layout
                '--theme=Nightshade'      # Dark theme to match your UI
            ])
            
        except Exception as e:
            print(f"Error showing keyboard: {e}")

    def hide_keyboard(self):
        """Hide the onboard keyboard"""
        try:
            if self.keyboard_process:
                self.keyboard_process.terminate()
                self.keyboard_process = None
            subprocess.run(['killall', 'onboard'], stderr=subprocess.DEVNULL)
        except Exception as e:
            print(f"Error hiding keyboard: {e}")

    def eventFilter(self, obj, event):
        """Handle focus events for showing/hiding keyboard"""
        if obj in [self.ui.username, self.ui.password]:
            if event.type() == QtCore.QEvent.FocusIn:
                self.show_keyboard()
            elif event.type() == QtCore.QEvent.FocusOut:
                # Only hide if neither input has focus
                if not self.ui.username.hasFocus() and not self.ui.password.hasFocus():
                    self.hide_keyboard()
        return super().eventFilter(obj, event)

    def setup_onboard_config(self):
        """Setup onboard keyboard configuration"""
        config_dir = os.path.expanduser('~/.config/onboard')
        os.makedirs(config_dir, exist_ok=True)
        
        config_file = os.path.join(config_dir, 'onboard.conf')
        
        # Create custom configuration
        config_content = """
[main]
key-size=94
touch-feedback=false
key-label-font=ubuntu
theme=Nightshade
layout=Full Keyboard

[window]
window-state-sticky=true
force-to-top=true
window-decoration=false
background-transparency=10

[auto-show]
hide-on-key-press=true
"""
        try:
            with open(config_file, 'w') as f:
                f.write(config_content)
        except Exception as e:
            print(f"Error creating onboard config: {e}")

    def install_keyboard(self):
        """Install onboard keyboard if not present"""
        try:
            result = subprocess.run(['which', 'onboard'], capture_output=True, text=True)
            if not result.stdout:
                print("Installing onboard keyboard...")
                subprocess.run(['sudo', 'apt-get', 'update'])
                subprocess.run(['sudo', 'apt-get', 'install', '-y', 'onboard'])
                self.setup_onboard_config()
                print("Onboard keyboard installed successfully")
            return True
        except Exception as e:
            print(f"Error installing keyboard: {e}")
            return False

    def closeEvent(self, event):
        """Clean up when closing"""
        self.hide_keyboard()
        if hasattr(self, 'timer'):
            self.timer.stop()
        event.accept()


    def handle_first_click(self, line_edit, default_text):
        if line_edit.text() == default_text:
            line_edit.setText("")

    def toggle_password_visibility(self):
        if self.ui.password.echoMode() == QtWidgets.QLineEdit.Password:
            self.ui.password.setEchoMode(QtWidgets.QLineEdit.Normal)
            self.toggle_button.setStyleSheet("""
                QPushButton {
                    background-color: transparent;
                    border: none;
                    color: #64B5F6;
                    font-size: 20px;
                }
            """)
        else:
            self.ui.password.setEchoMode(QtWidgets.QLineEdit.Password)
            self.toggle_button.setStyleSheet("""
                QPushButton {
                    background-color: transparent;
                    border: none;
                    color: #94a3b8;
                    font-size: 20px;
                }
            """)

    def eventFilter(self, obj, event):
        """Handle focus events for showing/hiding keyboard"""
        if obj in [self.ui.username, self.ui.password]:
            if event.type() == QtCore.QEvent.FocusIn:
                self.show_keyboard()
            elif event.type() == QtCore.QEvent.FocusOut:
                # Only hide if neither input has focus
                if not self.ui.username.hasFocus() and not self.ui.password.hasFocus():
                    self.hide_keyboard()
        return super().eventFilter(obj, event)


    def closeEvent(self, event):
        self.hide_keyboard()
        if hasattr(self, 'timer'):
            self.timer.stop()
        event.accept()


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1024, 600)
        Form.setStyleSheet("background-color:black;")
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(0, 0, 1024, 40))
        self.frame.setStyleSheet("background-color:#1f2836;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(60, 0, 281, 41))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:white;")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(930, 0, 71, 41))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color:white;")
        self.label_3.setObjectName("label_3")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(5, 8, 44, 23))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/newPrefix/Vekaria Healthcare Logo/VHC Logo.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.frame)
        self.label_10.setGeometry(QtCore.QRect(870, 4, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap(".\\icons/logo12.png"))
        self.label_10.setScaledContents(True)
        self.label_10.setObjectName("label_10")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(0, 50, 1024, 40))
        font = QtGui.QFont()
        font.setFamily("Helvetica Rounded")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_4.setStyleSheet("QFrame{\n"
"background:none;\n"
"color:#f2f5f3;\n"
"}")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(200, 115, 624, 430))
        self.frame_2.setStyleSheet("QFrame{\n"
"background-color:#1f2836;\n"
"border-radius:30px;\n"
"border:1px solid white;\n"
"\n"
"};\n"
"color:white;")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.username = QtWidgets.QLineEdit(self.frame_2)
        self.username.setGeometry(QtCore.QRect(62, 50, 500, 61))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.username.setFont(font)
        self.username.setStyleSheet(" QLineEdit {\n"
"                background-color: #334155;\n"
"                border:1px solid white;\n"
"                border-radius: 15px;\n"
"                padding: 5px;\n"
"                padding-left: 30px;\n"
"                color: #94a3b8;\n"
"            }")
        self.username.setObjectName("username")
        self.password = QtWidgets.QLineEdit(self.frame_2)
        self.password.setGeometry(QtCore.QRect(62, 140, 500, 61))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.password.setFont(font)
        self.password.setStyleSheet(" QLineEdit {\n"
"                background-color: #334155;\n"
"                border: 1px solid white;\n"
"                border-radius: 15px;\n"
"                padding: 5px;\n"
"                padding-left: 30px;\n"
"                color: #94a3b8;\n"
"            }")
        self.password.setObjectName("password")
        self.login = QtWidgets.QPushButton(self.frame_2)
        self.login.setGeometry(QtCore.QRect(230, 350, 161, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.login.setFont(font)
        self.login.setStyleSheet("\n"
"    QPushButton {\n"
"        background-color: transparent;\n"
"        color: white;\n"
"        border: 1px solid white;\n"
"        padding: 10px 20px;\n"
"        font-size: 24px;\n"
"        border-radius: 1px;\n"
"        font-weight: bold;\n"
"        transition: all 0.3s;\n"
"        margin: 2px;\n"
"        /* Add subtle initial shadow */\n"
"        border-bottom: 1px solid white;\n"
"        border-right: 1px solid white;\n"
"    }\n"
"    \n"
"    QPushButton:hover {\n"
"        background-color: rgba(33, 150, 243, 0.1);\n"
"        border: 2px solid #64B5F6;\n"
"        color: #64B5F6;\n"
"        /* Enhanced hover effect */\n"
"        border-bottom: 4px solid #42A5F5;\n"
"        border-right: 3px solid #42A5F5;\n"
"        margin: 2px;\n"
"    }\n"
"    \n"
"    QPushButton:pressed {\n"
"        background-color: rgba(33, 150, 243, 0.2);\n"
"        border: 2px solid white;\n"
"        /* Create pressed effect */\n"
"        border-bottom: 2px solid white;\n"
"        border-right: 2px solid white;\n"
"        margin-top: 4px;\n"
"        margin-left: 2px;\n"
"        padding-top: 11px;\n"
"        padding-left: 21px;\n"
"    }\n"
"    \n"
"    QPushButton:disabled {\n"
"        background-color: transparent;\n"
"        color: #B0B0B0;\n"
"        border: 2px solid #B0B0B0;\n"
"        border-bottom: 4px solid #909090;\n"
"        border-right: 3px solid #909090;\n"
"    }\n"
"")
        self.login.setObjectName("login")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(112, 210, 400, 71))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_7.setStyleSheet("QFrame{\n"
"backgorund:none;\n"
"border:none;\n"
"color:#f2f5f3;\n"
"}")
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setGeometry(QtCore.QRect(110, 270, 491, 41))
        self.frame_3.setStyleSheet("border:none;")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.radioButton = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton.setGeometry(QtCore.QRect(11, 11, 106, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioButton.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"}")
        self.radioButton.setChecked(False)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton_2.setEnabled(True)
        self.radioButton_2.setGeometry(QtCore.QRect(190, 11, 80, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.radioButton_2.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"align-item:center;\n"
"align-content:center;\n"
"justify-content:center;\n"
"}")
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.frame_3)
        self.radioButton_3.setGeometry(QtCore.QRect(328, 11, 71, 19))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setStyleSheet("QRadioButton{\n"
"color:white;\n"
"background:none;\n"
"}")
        self.radioButton_3.setObjectName("radioButton_3")
        self.Time = QtWidgets.QLabel(Form)
        self.Time.setGeometry(QtCore.QRect(960, 550, 55, 16))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        self.Time.setFont(font)
        self.Time.setStyleSheet("color:white;")
        self.Time.setObjectName("Time")
        self.date = QtWidgets.QLabel(Form)
        self.date.setGeometry(QtCore.QRect(934, 570, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Helvetica Neue")
        self.date.setFont(font)
        self.date.setStyleSheet("color:white;")
        self.date.setObjectName("date")
        self.username.setPlaceholderText("Username")
        self.password.setPlaceholderText("Password")
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_2.setText(_translate("Form", "Vekaria Healthcare"))
        self.label_3.setText(_translate("Form", "V1.0"))
        self.label_4.setText(_translate("Form", "Macular Densitometer"))
        self.login.setText(_translate("Form", "LOGIN"))
        self.label_7.setText(_translate("Form", "Operation Mode"))
        self.radioButton.setText(_translate("Form", "Eye Camp"))
        self.radioButton_2.setText(_translate("Form", "Clinic"))
        self.radioButton_3.setText(_translate("Form", "Demo"))
        self.Time.setText(_translate("Form", "19:53"))
        self.date.setText(_translate("Form", "12-10-2024"))
import vekarialogo_rc
import wifi_rc



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    window = LoginForm()
    window.show()
    sys.exit(app.exec_())
